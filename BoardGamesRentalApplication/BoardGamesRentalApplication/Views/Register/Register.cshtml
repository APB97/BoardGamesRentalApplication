@model BoardGamesRentalApplication.Models.RegisterUser

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/_LayoutPageLogin.cshtml";
}
<!--
<div class="links">
    <ul class="links-unordered-list">
        <li class="">
            <a href="/Home/Index" class="">Strona główna</a>
        </li>
        <li class="">
            <a href="/Home/About" class="">Informacje</a>
        </li>
        <li class="">
            <a href="/Home/Contact" class="">Kontakt</a>
        </li>
        <li class="">
            <a href="/Login/Login" class="">Logowanie</a>
        </li>
    </ul>
</div>
-->
<h1>
    Zarejestruj się
</h1>

<div class="container">
    <div id="clouds">
        <div class="cloud x1"></div>
        <!-- Time for multiple clouds to dance around -->
        <div class="cloud x2"></div>
        <div class="cloud x3"></div>
        <div class="cloud x4"></div>
        <div class="cloud x5"></div>
    </div>
    <div class="sub-main-w3">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <form action="Register" method="post">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            <div class="text-danger">
                                @Html.Label("", Convert.ToString((string)ViewBag.DuplicateUsernameMessage))
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            <div class="text-danger">
                                @Html.Label("", Convert.ToString((string)ViewBag.DuplicateEmailMessage))
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            <div class="text-danger">
                                @Html.Label("", Convert.ToString((string)ViewBag.Message))
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Utwórz" class="btn btn-danger" />
                        </div>
                    </div>

                </form>
            </div>
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
